<?php
namespace app\models;

use app\helpers\CActiveRecord;
use app\helpers\Utils;
use yii\base\Model;

/**
 * @property string $name
 * @property string $last_name
 * @property string $brand_name
 * @property string $country
 * @property string $city
 */
class PersonPersonalInfo extends Model
{

	/**
	 * @var string
	 */
	public $name;

	/**
	 * @var string
	 */
	public $last_name;

	/**
	 * @var array
	 */
//	public $surnames;

	/**
	 * @var string
	 */
	public $brand_name;

	/**
	 * @var string
	 */
	public $country;

	/**
	 * @var string
	 */
	public $city;

	public function init()
	{
		parent::init();

		$this->setScenario(Person::SERIALIZE_SCENARIO_LOAD_SUB_DOCUMENT);
	}


	/**
	 * Get the city from Person.
	 * First get city, otherwise get country
	 *
	 * @return string|null
	 */
	public function getCityLabel()
	{
		if (isset($this->city)) {
			return $this->city;
		} elseif (isset($this->country)) {
			/** @var Country $country */
			$country = Country::findOne(['country_code' => $this->country]);
			return Utils::l($country->country_name);
		}

		return null;
	}

	/**
	 * Get brand name from Person
	 *
	 * @return string
	 */
	public function getBrandName()
	{
		return (isset($this->brand_name)) ? $this->brand_name : $this->name . (!empty($this->last_name) ? $this->last_name : '');
	}

	/**
	 * Get the location from Person (city and country).
	 *
	 * @return string
	 */
	public function getLocationLabel()
	{
		$location = [];

		if (!empty($this->city)) {
			$location[] = $this->city;
		}
		/** @var Country $country */
		if (!empty($this->country)) {
			$country = Country::findOne(['country_code' => $this->country]);
			if ($country) {
				$location[] = Utils::l($country->country_name);
			}
		}

		return implode(", ", $location);
	}

	public function load($data, $formName = null)
	{
		// little hack, while don't rename database attributes
		if (array_key_exists("first_name", $data)) {
			$this->name = $data["first_name"];
		}
		return parent::load($data, $formName); // TODO: Change the autogenerated stub
	}

	public function rules()
	{
		return [
			[['name', 'last_name', 'brand_name', 'country', 'city'], 'required', 'on' => Person::SCENARIO_DEVISER_UPDATE_PROFILE],
			[['last_name'], 'safe', 'on' => Person::SCENARIO_DEVISER_UPDATE_PROFILE],
			[['name', 'last_name', 'brand_name', 'country', 'city'], 'safe', 'on' => [Person::SERIALIZE_SCENARIO_LOAD_SUB_DOCUMENT, Person::SCENARIO_DEVISER_UPDATE_DRAFT, Person::SCENARIO_DEVISER_CREATE_DRAFT]],
		];
	}

}